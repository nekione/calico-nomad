---
- name: Install basic tools
  hosts: nodes
  vars:
    containerd_url: https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz
    runc_url: https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64
    cni_plugins_url: https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
    nerdctl_url: https://github.com/containerd/nerdctl/releases/download/v0.23.0/nerdctl-0.23.0-linux-amd64.tar.gz

  tasks:
    - name: Install Packages
      ansible.builtin.apt:
        name:
          - vim
          - net-tools
          - curl
          - wget
        state: present
    - name: Ensure containerd binary
      ansible.builtin.unarchive:
        src: "{{ containerd_url }}"
        dest: /usr/local
        creates: /usr/local/bin/containerd
        validate_certs: true
        owner: root
        group: root

    - name: Ensure systemd directory
      ansible.builtin.file:
        path: /usr/local/lib/systemd/system/
        recurse: true
        state: directory

    - name: Template containerd service unit
      ansible.builtin.template:
        owner: root
        group: root
        mode: 0644
        src: containerd.service.j2
        dest: /usr/local/lib/systemd/system/containerd.service

    - name: Start containerd service
      ansible.builtin.service:
        name: containerd
        state: started
        enabled: true

    - name: Ensure runc binary
      ansible.builtin.get_url:
        url: "{{ runc_url }}"
        dest: /usr/local/sbin/runc
        mode: 0755
        owner: root
        group: root

    - name: Ensure CNI plugin directory
      ansible.builtin.file:
        path: /opt/cni/bin
        state: directory
        recurse: true

    - name: Download cni plugins
      ansible.builtin.unarchive:
        src: "{{ cni_plugins_url }}"
        dest: /opt/cni/bin
        validate_certs: true
        mode: 0755
        owner: root
        group: root

    - name: Ensure nerdctl
      ansible.builtin.unarchive:
        src: "{{ nerdctl_url }}"
        dest: /usr/local/bin
        creates: /usr/local/bin/nerdctl
        validate_certs: true
        mode: 0700
        owner: root
        group: root

    - name: Template CNI config
      ansible.builtin.template:
        src: mynet.conf.j2
        dest: /etc/cni/net.d/10-mynet.conf
        owner: root
        group: root
        mode: 0644

- name: Generate tls certs
  hosts: master
  vars:
    tls_urls:
      - https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssl
      - https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssljson
    cfssl_url:
    cfssl_json_url: https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssljson
  tasks:
    - name: Ensure TLS tools
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /usr/local/bin/
        validate_certs: true
        mode: 0700
        owner: root
        group: root
      loop: "{{ tls_urls }}"

    - name: Ensure certs directory
      ansible.builtin.file:
        path: /certs
        state: directory
        recurse: true

    - name: Template ca-config.json
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: /certs/{{ item }}
        mode: 0644
        owner: root
        group: root
      loop:
        - ca-config.json
        - ca-csr.json
      notify: generate CA certificates

    - name: Template etcd-csr.json
      ansible.builtin.template:
        src: etcd-csr.json.j2
        dest: /certs/etcd-csr.json
        mode: 0644
        user: root
        group: root
      notify: generate tls certificate

    - name: Fetch tls certificates
      ansible.builtin.fetch:
        src: /certs/{{ item }}
        dest: .
      loop:
        - etcd.pem
        - ca.pem
        - etcd-key.pem
  handlers:
    - name: Generate CA certificates
      ansible.builtin.shell: |
        cfssl gencert -initca /certs/ca-csr.json \
        | cfssljson -bare /certs/ca

    - name: Generate tls certificate
      ansible.builtin.shell: |
        cfssl gencert -ca=/certs/ca.pem \
                      -ca-key=/certs/ca-key.pem \
                      -config=/certs/ca-config.json \
                      -profile=etcd \
                      /certs/etcd-csr.json \
                      | cfssljson -bare /certs/etcd

- name: Installing etcd
  hosts: nodes
  vars:
    etcd_url: https://github.com/etcd-io/etcd/releases/download/v3.5.5/etcd-v3.5.5-linux-amd64.tar.gz
    etcd_version: 3.5.5
  tasks:
    - name: Ensure pki directory
      ansible.builtin.file:
        path: /etc/etcd/pki
        state: directory
        recurse: true
    - name: Copy certificate to nodes
      ansible.builtin.copy:
        src: "{{ groups['master'][0] }}/certs/{{ item }}"
        dest: /etc/etcd/pki
        mode: 0400
      loop:
        - etcd.pem
        - ca.pem
        - etcd-key.pem

    - name: Get etcd binary
      ansible.builtin.unarchive:
        src: "{{ etcd_url }}"
        dest: /usr/local/bin
        exclude:
          - Documentation
          - README*
        extra_opts: --strip-components=1
        validate_certs: true
        decrypt: true
        owner: root
        group: root

    - name: Template etcd service file
      ansible.builtin.template:
        src: etcd.service.j2
        dest: /etc/systemd/system/etcd.service
        mode: 0644

    - name: Template etcd service
      ansible.builtin.service:
        name: etcd
        state: started
        enabled: true

- name: Installing Calico-node, calicoctl and calico-plugins
  hosts: nodes
  vars:
    calicoctl_url: https://github.com/projectcalico/calico/releases/download/v3.24.1/calicoctl-linux-amd64
    calico_plugin_url: https://github.com/projectcalico/cni-plugin/releases/download/v3.14.0/calico-amd64
    calico_ipam_url: https://github.com/projectcalico/cni-plugin/releases/download/v3.14.0/calico-ipam-amd64

  tasks:
    - name: Get calicoctl binary
      ansible.builtin.get_url:
        url: "{{ calicoctl_url }}"
        dest: /usr/local/bin/calicoctl
        mode: 700
    - name: Get calico CNI plugin
      ansible.builtin.get_url:
        url: "{{ calico_plugin_url }}"
        dest: /opt/cni/bin/calico
        mode: 755
    - name: Get calico-ipam plugin
      ansible.builtin.get_url:
        url: "{{ calico_ipam_url }}"
        dest: /opt/cni/bin/calico-ipam
        mode: 755

    - name: Ensure cni configuration directory
      ansible.builtin.file:
        path: /etc/cni/net.d/
        state: directory
        recurse: true

    - name: Template testnet CNI config
      ansible.builtin.template:
        src: testnet.conflist.j2
        dest: /etc/cni/net.d/10-testnet.conflist
        mode: 0644

    - name: Template calicoctl config directory
      ansible.builtin.file:
        path: /etc/calico
        state: directory
        recurse: true
        mode: 0777

    - name: Template calicoctl config
      ansible.builtin.template:
        src: calicoctl.cfg.j2
        dest: /etc/calico/calicoctl.cfg
        mode: 0644

    - name: Template calico container directories
      ansible.builtin.file:
        path: "{{ item }}"
        recurse: true
        state: directory
      with_items:
        - /var/log/calico
        - /var/run/calico
        - /var/lib/calico

    - name: Template startup script for calico node
      ansible.builtin.template:
        src: calicoup.sh.j2
        dest: /usr/local/bin/calicoup.sh
        mode: 0755

    - name: Ensure calico.env file
      ansible.builtin.file:
        path: /etc/calico/calico.env
        state: touch
        mode: 0644

    - name: Template calico-node.service
      ansible.builtin.template:
        src: calico-node.service.j2
        dest: /etc/systemd/system/calico-node.service
        mode: 0644

    - name: Start calico-node service
      ansible.builtin.service:
        name: calico-node
        state: restarted
        enabled: true

- name: Installing Nomad
  hosts: nodes
  vars:
    hashicorp_gpg: https://apt.releases.hashicorp.com/gpg
    containerd_driver_url: https://github.com/Roblox/nomad-driver-containerd/releases/download/v0.9.3/containerd-driver

  tasks:
    - name: Ensure Hashi GPG keys
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: Ensure Hashi repo
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
        state: present
        mode: 0644
        update_cache: true
        validate_certs: true
        filename: hashicorp

    - name: Installing Nomad
      ansible.builtin.apt:
        name: nomad
        state: present

    - name: Ensure plugins directory for containerd-driver
      ansible.builtin.file:
        path: /opt/nomad/data/plugins
        recurse: true
        state: directory

    - name: Ensure nomad containerd-driver
      ansible.builtin.get_url:
        url: "{{ containerd_driver_url }}"
        dest: /opt/nomad/data/plugins/containerd-driver
        mode: 0755

    - name: Ensure Nomad containerd config
      ansible.builtin.copy:
        dest: /etc/nomad.d/containerd.hcl
        content: |
          plugin "containerd-driver" {
            config {
              enabled = true
              containerd_runtime = "io.containerd.runc.v2"
              stats_interval = "5s"
            }
          }
        backup: true
        mode: 0644
        owner: root
        group: root

    - name: Template nomad.env file
      ansible.builtin.template:
        src: nomad.env.j2
        dest: /etc/nomad.d/nomad.env
        mode: 0644

    - name: Ensure nomad CNI directory
      ansible.builtin.file:
        path: /opt/cni/config
        state: directory
        mode: 0777

    - name: Template cni config for nomad
      ansible.builtin.template:
        src: testnet.nomad.j2
        dest: /opt/cni/config/10-testnet.conflist
        mode: 0644
      notify: Restart nomad

    - name: Ensure nomad service
      ansible.builtin.service:
        name: nomad
        state: started
        enabled: true

    - name: Template example jobs
      ansible.builtin.template:
        src: example.job.j2
        dest: /root/example.nomad
        mode: 0644

  handlers:
    - name: Restart nomad
      ansible.builtin.service:
        name: nomad
        state: restarted
        enabled: true
